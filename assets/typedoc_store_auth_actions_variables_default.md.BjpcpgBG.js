import{_ as a,c as t,o,ae as r}from"./chunks/framework.BAlYLWiR.js";const p=JSON.parse('{"title":"Variable: default","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/store/auth/actions/variables/default.md","filePath":"typedoc/store/auth/actions/variables/default.md"}'),s={name:"typedoc/store/auth/actions/variables/default.md"};function n(d,e,c,l,i,h){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../../README"><strong>destillationapp-frontend v0.1.0</strong></a></p><hr><p><a href="./../../../../modules">destillationapp-frontend</a> / <a href="./../README">store/auth/actions</a> / default</p><h1 id="variable-default" tabindex="-1">Variable: default <a class="header-anchor" href="#variable-default" aria-label="Permalink to &quot;Variable: default&quot;">​</a></h1><blockquote><p><strong>default</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DestillApp/main/blob/ec2df52a50a22efb35f12a0243274f6d03fbca52/frontend/src/store/auth/actions.ts#L25" target="_blank" rel="noreferrer">store/auth/actions.ts:25</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="changepassword" tabindex="-1">changePassword() <a class="header-anchor" href="#changepassword" aria-label="Permalink to &quot;changePassword()&quot;">​</a></h3><blockquote><p><strong>changePassword</strong>(<code>context</code>, <code>param1</code>): <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p></blockquote><p>Changes the user&#39;s password.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h5><p><code>Context</code></p><p>The Vuex action context.</p><h5 id="param1" tabindex="-1">param1 <a class="header-anchor" href="#param1" aria-label="Permalink to &quot;param1&quot;">​</a></h5><p>The old and new passwords.</p><h6 id="newpassword" tabindex="-1">newPassword <a class="header-anchor" href="#newpassword" aria-label="Permalink to &quot;newPassword&quot;">​</a></h6><p><code>string</code></p><h6 id="oldpassword" tabindex="-1">oldPassword <a class="header-anchor" href="#oldpassword" aria-label="Permalink to &quot;oldPassword&quot;">​</a></h6><p><code>string</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Resolves to true if successful, &quot;Invalid old password&quot; if failed, or throws an error.</p><h3 id="fetchuserauthenticationstatus" tabindex="-1">fetchUserAuthenticationStatus() <a class="header-anchor" href="#fetchuserauthenticationstatus" aria-label="Permalink to &quot;fetchUserAuthenticationStatus()&quot;">​</a></h3><blockquote><p><strong>fetchUserAuthenticationStatus</strong>(<code>context</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><p>Fetches the user&#39;s authentication status from the backend.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="context-1" tabindex="-1">context <a class="header-anchor" href="#context-1" aria-label="Permalink to &quot;context&quot;">​</a></h5><p><code>Context</code></p><p>The Vuex action context.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Resolves to true if authenticated, otherwise false.</p><h3 id="login" tabindex="-1">login() <a class="header-anchor" href="#login" aria-label="Permalink to &quot;login()&quot;">​</a></h3><blockquote><p><strong>login</strong>(<code>context</code>, <code>param1</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>string</code> | <code>boolean</code>&gt;</p></blockquote><p>Logs in the user with the provided credentials.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="context-2" tabindex="-1">context <a class="header-anchor" href="#context-2" aria-label="Permalink to &quot;context&quot;">​</a></h5><p><code>Context</code></p><p>The Vuex action context.</p><h5 id="param1-1" tabindex="-1">param1 <a class="header-anchor" href="#param1-1" aria-label="Permalink to &quot;param1&quot;">​</a></h5><p>The user&#39;s email and password.</p><h6 id="email" tabindex="-1">email <a class="header-anchor" href="#email" aria-label="Permalink to &quot;email&quot;">​</a></h6><p><code>string</code></p><h6 id="password" tabindex="-1">password <a class="header-anchor" href="#password" aria-label="Permalink to &quot;password&quot;">​</a></h6><p><code>string</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>undefined</code> | <code>string</code> | <code>boolean</code>&gt;</p><p>Resolves to true if successful, &quot;Invalid credentials&quot; if failed, or throws an error.</p><h3 id="logout" tabindex="-1">logout() <a class="header-anchor" href="#logout" aria-label="Permalink to &quot;logout()&quot;">​</a></h3><blockquote><p><strong>logout</strong>(<code>context</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Logs out the user and clears relevant local storage.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="context-3" tabindex="-1">context <a class="header-anchor" href="#context-3" aria-label="Permalink to &quot;context&quot;">​</a></h5><p><code>Context</code></p><p>The Vuex action context.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Resolves when logout is complete.</p><h3 id="setloadingauthstatus" tabindex="-1">setLoadingAuthStatus() <a class="header-anchor" href="#setloadingauthstatus" aria-label="Permalink to &quot;setLoadingAuthStatus()&quot;">​</a></h3><blockquote><p><strong>setLoadingAuthStatus</strong>(<code>context</code>, <code>value</code>): <code>void</code></p></blockquote><p>Sets the loading status for authentication actions.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="context-4" tabindex="-1">context <a class="header-anchor" href="#context-4" aria-label="Permalink to &quot;context&quot;">​</a></h5><p><code>Context</code></p><p>The Vuex action context.</p><h5 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>boolean</code></p><p>The loading status value.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',71)]))}const b=a(s,[["render",n]]);export{p as __pageData,b as default};
