import{_ as r,c as o,o as a,ae as t}from"./chunks/framework.BAlYLWiR.js";const u=JSON.parse('{"title":"Function: handleUserError()","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/helpers/errorHandling/functions/handleUserError.md","filePath":"typedoc/helpers/errorHandling/functions/handleUserError.md"}'),n={name:"typedoc/helpers/errorHandling/functions/handleUserError.md"};function s(d,e,l,i,h,c){return a(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../../../README"><strong>destillationapp-frontend v0.1.0</strong></a></p><hr><p><a href="./../../../modules">destillationapp-frontend</a> / <a href="./../README">helpers/errorHandling</a> / handleUserError</p><h1 id="function-handleusererror" tabindex="-1">Function: handleUserError() <a class="header-anchor" href="#function-handleusererror" aria-label="Permalink to &quot;Function: handleUserError()&quot;">​</a></h1><blockquote><p><strong>handleUserError</strong>(<code>error</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/DestillApp/main/blob/ec2df52a50a22efb35f12a0243274f6d03fbca52/frontend/src/helpers/errorHandling.ts#L11" target="_blank" rel="noreferrer">helpers/errorHandling.ts:11</a></p><p>Handles user errors by reporting them to Sentry, logging out the user if unauthorized, redirecting to the login page, or logging the error to the console.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error&quot;">​</a></h3><p><code>any</code></p><p>The error object to handle.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>A promise that resolves when the error has been handled.</p>',14)]))}const f=r(n,[["render",s]]);export{u as __pageData,f as default};
