import{_ as t,c as a,o,ae as l}from"./chunks/framework.BAlYLWiR.js";const g=JSON.parse('{"title":"PlantListPage","description":"","frontmatter":{},"headers":[],"relativePath":"api/pages/PlantListPage.md","filePath":"api/pages/PlantListPage.md"}'),n={name:"api/pages/PlantListPage.md"};function d(r,e,i,s,c,h){return o(),a("div",null,e[0]||(e[0]=[l('<h1 id="plantlistpage" tabindex="-1">PlantListPage <a class="header-anchor" href="#plantlistpage" aria-label="Permalink to &quot;PlantListPage&quot;">​</a></h1><p><a href="https://github.com/DestillApp/main/blob/main/frontend/src/pages/my-account/PlantListPage.vue" target="_blank" rel="noreferrer">View source on GitHub</a></p><p>This component displays a paginated, searchable, and sortable list of plants. Allows deletion of plants and manages list settings. *</p><h2 id="exposed-methods" tabindex="-1">Exposed Methods <a class="header-anchor" href="#exposed-methods" aria-label="Permalink to &quot;Exposed Methods&quot;">​</a></h2><h3 id="fetchplantlist" tabindex="-1"><code>fetchPlantList()</code> <a class="header-anchor" href="#fetchplantlist" aria-label="Permalink to &quot;`fetchPlantList()`&quot;">​</a></h3><p>Fetch the list of plants from the GraphQL server.</p><p><strong>Parameters:</strong></p><ul><li><code>name</code> (<code>string</code>): Search query for plant name.</li><li><code>sorting</code> (<code>string</code>): Sorting key.</li></ul><h3 id="handlesearch" tabindex="-1"><code>handleSearch()</code> <a class="header-anchor" href="#handlesearch" aria-label="Permalink to &quot;`handleSearch()`&quot;">​</a></h3><p>Handle the search query emitted from the BaseSearchItem component.</p><h3 id="handleselectlength" tabindex="-1"><code>handleSelectLength()</code> <a class="header-anchor" href="#handleselectlength" aria-label="Permalink to &quot;`handleSelectLength()`&quot;">​</a></h3><p>Handle the selection of list length.</p><p><strong>Parameters:</strong></p><ul><li><code>length</code> (<code>number</code>): The selected length.</li></ul><h3 id="handlesorting" tabindex="-1"><code>handleSorting()</code> <a class="header-anchor" href="#handlesorting" aria-label="Permalink to &quot;`handleSorting()`&quot;">​</a></h3><p>Handle the sorting of the items list.</p><p><strong>Parameters:</strong></p><ul><li><code>option</code> (<code>string</code>): The sorting option.</li></ul><h3 id="updatesorting" tabindex="-1"><code>updateSorting()</code> <a class="header-anchor" href="#updatesorting" aria-label="Permalink to &quot;`updateSorting()`&quot;">​</a></h3><p>Update the sorting option and fetch the plant list.</p><p><strong>Parameters:</strong></p><ul><li><code>sortingKey</code> (<code>string</code>): The sorting key.</li><li><code>sortingValue</code> (<code>string</code>): The sorting value.</li></ul><h3 id="opendeletemodal" tabindex="-1"><code>openDeleteModal()</code> <a class="header-anchor" href="#opendeletemodal" aria-label="Permalink to &quot;`openDeleteModal()`&quot;">​</a></h3><p>Open the delete modal for a specific plant.</p><p><strong>Parameters:</strong></p><ul><li><code>id</code> (<code>string</code>): The ID of the plant to delete.</li><li><code>name</code> (<code>string</code>): The name of the plant.</li><li><code>part</code> (<code>string</code>): The part of the plant.</li></ul><h3 id="closedeletemodal" tabindex="-1"><code>closeDeleteModal()</code> <a class="header-anchor" href="#closedeletemodal" aria-label="Permalink to &quot;`closeDeleteModal()`&quot;">​</a></h3><p>Close the delete modal.</p><h3 id="deleteplant" tabindex="-1"><code>deletePlant()</code> <a class="header-anchor" href="#deleteplant" aria-label="Permalink to &quot;`deletePlant()`&quot;">​</a></h3><p>Delete the selected plant from the list.</p><h3 id="deleteplantfromlist" tabindex="-1"><code>deletePlantFromList()</code> <a class="header-anchor" href="#deleteplantfromlist" aria-label="Permalink to &quot;`deletePlantFromList()`&quot;">​</a></h3><p>Remove the deleted plant from the plant list.</p><p><strong>Parameters:</strong></p><ul><li><code>id</code> (<code>string</code>): The ID of the deleted plant.</li></ul>',34)]))}const m=t(n,[["render",d]]);export{g as __pageData,m as default};
