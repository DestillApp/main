import{_ as a,c as t,o as r,ae as o}from"./chunks/framework.BAlYLWiR.js";const p=JSON.parse('{"title":"Variable: default","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/store/auth/getters/variables/default.md","filePath":"typedoc/store/auth/getters/variables/default.md"}'),s={name:"typedoc/store/auth/getters/variables/default.md"};function i(d,e,n,l,h,u){return r(),t("div",null,e[0]||(e[0]=[o('<p><a href="./../../../../README"><strong>destillationapp-frontend v0.1.0</strong></a></p><hr><p><a href="./../../../../modules">destillationapp-frontend</a> / <a href="./../README">store/auth/getters</a> / default</p><h1 id="variable-default" tabindex="-1">Variable: default <a class="header-anchor" href="#variable-default" aria-label="Permalink to &quot;Variable: default&quot;">​</a></h1><blockquote><p><strong>default</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DestillApp/main/blob/ec2df52a50a22efb35f12a0243274f6d03fbca52/frontend/src/store/auth/getters.ts#L7" target="_blank" rel="noreferrer">store/auth/getters.ts:7</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="isauthenticated" tabindex="-1">isAuthenticated() <a class="header-anchor" href="#isauthenticated" aria-label="Permalink to &quot;isAuthenticated()&quot;">​</a></h3><blockquote><p><strong>isAuthenticated</strong>(<code>state</code>): <code>boolean</code></p></blockquote><p>Returns the user&#39;s authentication status.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h5><p><a href="./../../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p><code>true</code> if the user is authenticated, otherwise <code>false</code>.</p><h3 id="isloadingauthstatus" tabindex="-1">isLoadingAuthStatus() <a class="header-anchor" href="#isloadingauthstatus" aria-label="Permalink to &quot;isLoadingAuthStatus()&quot;">​</a></h3><blockquote><p><strong>isLoadingAuthStatus</strong>(<code>state</code>): <code>boolean</code></p></blockquote><p>Returns the loading status of the authentication process.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="state-1" tabindex="-1">state <a class="header-anchor" href="#state-1" aria-label="Permalink to &quot;state&quot;">​</a></h5><p><a href="./../../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><p><code>true</code> if authentication status is loading, otherwise <code>false</code>.</p>',27)]))}const f=a(s,[["render",i]]);export{p as __pageData,f as default};
