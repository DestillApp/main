import{_ as a,c as t,o,ae as r}from"./chunks/framework.Dgg8-8ov.js";const p=JSON.parse('{"title":"Variable: default","description":"","frontmatter":{},"headers":[],"relativePath":"typedoc/store/auth/variables/default.md","filePath":"typedoc/store/auth/variables/default.md"}'),s={name:"typedoc/store/auth/variables/default.md"};function n(c,e,i,d,h,l){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../README"><strong>destillationapp-frontend v0.1.0</strong></a></p><hr><p><a href="./../../../modules">destillationapp-frontend</a> / <a href="./../README">store/auth</a> / default</p><h1 id="variable-default" tabindex="-1">Variable: default <a class="header-anchor" href="#variable-default" aria-label="Permalink to &quot;Variable: default&quot;">​</a></h1><blockquote><p><strong>default</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DestillApp/main/blob/ec2df52a50a22efb35f12a0243274f6d03fbca52/frontend/src/store/auth/index.ts#L20" target="_blank" rel="noreferrer">store/auth/index.ts:20</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="actions" tabindex="-1">actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;actions&quot;">​</a></h3><blockquote><p><strong>actions</strong>: <code>object</code> = <code>authActions</code></p></blockquote><p>Actions for performing asynchronous authentication tasks.</p><h4 id="actions-changepassword" tabindex="-1">actions.changePassword() <a class="header-anchor" href="#actions-changepassword" aria-label="Permalink to &quot;actions.changePassword()&quot;">​</a></h4><blockquote><p><strong>changePassword</strong>(<code>context</code>, <code>param1</code>): <code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p></blockquote><p>Changes the user&#39;s password.</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="context" tabindex="-1">context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;context&quot;">​</a></h6><p><code>Context</code></p><p>The Vuex action context.</p><h6 id="param1" tabindex="-1">param1 <a class="header-anchor" href="#param1" aria-label="Permalink to &quot;param1&quot;">​</a></h6><p>The old and new passwords.</p><h6 id="newpassword" tabindex="-1">newPassword <a class="header-anchor" href="#newpassword" aria-label="Permalink to &quot;newPassword&quot;">​</a></h6><p><code>string</code></p><h6 id="oldpassword" tabindex="-1">oldPassword <a class="header-anchor" href="#oldpassword" aria-label="Permalink to &quot;oldPassword&quot;">​</a></h6><p><code>string</code></p><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>string</code> | <code>boolean</code>&gt;</p><p>Resolves to true if successful, &quot;Invalid old password&quot; if failed, or throws an error.</p><h4 id="actions-fetchuserauthenticationstatus" tabindex="-1">actions.fetchUserAuthenticationStatus() <a class="header-anchor" href="#actions-fetchuserauthenticationstatus" aria-label="Permalink to &quot;actions.fetchUserAuthenticationStatus()&quot;">​</a></h4><blockquote><p><strong>fetchUserAuthenticationStatus</strong>(<code>context</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><p>Fetches the user&#39;s authentication status from the backend.</p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="context-1" tabindex="-1">context <a class="header-anchor" href="#context-1" aria-label="Permalink to &quot;context&quot;">​</a></h6><p><code>Context</code></p><p>The Vuex action context.</p><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>Resolves to true if authenticated, otherwise false.</p><h4 id="actions-login" tabindex="-1">actions.login() <a class="header-anchor" href="#actions-login" aria-label="Permalink to &quot;actions.login()&quot;">​</a></h4><blockquote><p><strong>login</strong>(<code>context</code>, <code>param1</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>string</code> | <code>boolean</code>&gt;</p></blockquote><p>Logs in the user with the provided credentials.</p><h5 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="context-2" tabindex="-1">context <a class="header-anchor" href="#context-2" aria-label="Permalink to &quot;context&quot;">​</a></h6><p><code>Context</code></p><p>The Vuex action context.</p><h6 id="param1-1" tabindex="-1">param1 <a class="header-anchor" href="#param1-1" aria-label="Permalink to &quot;param1&quot;">​</a></h6><p>The user&#39;s email and password.</p><h6 id="email" tabindex="-1">email <a class="header-anchor" href="#email" aria-label="Permalink to &quot;email&quot;">​</a></h6><p><code>string</code></p><h6 id="password" tabindex="-1">password <a class="header-anchor" href="#password" aria-label="Permalink to &quot;password&quot;">​</a></h6><p><code>string</code></p><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>undefined</code> | <code>string</code> | <code>boolean</code>&gt;</p><p>Resolves to true if successful, &quot;Invalid credentials&quot; if failed, or throws an error.</p><h4 id="actions-logout" tabindex="-1">actions.logout() <a class="header-anchor" href="#actions-logout" aria-label="Permalink to &quot;actions.logout()&quot;">​</a></h4><blockquote><p><strong>logout</strong>(<code>context</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Logs out the user and clears relevant local storage.</p><h5 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="context-3" tabindex="-1">context <a class="header-anchor" href="#context-3" aria-label="Permalink to &quot;context&quot;">​</a></h6><p><code>Context</code></p><p>The Vuex action context.</p><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Resolves when logout is complete.</p><h4 id="actions-setloadingauthstatus" tabindex="-1">actions.setLoadingAuthStatus() <a class="header-anchor" href="#actions-setloadingauthstatus" aria-label="Permalink to &quot;actions.setLoadingAuthStatus()&quot;">​</a></h4><blockquote><p><strong>setLoadingAuthStatus</strong>(<code>context</code>, <code>value</code>): <code>void</code></p></blockquote><p>Sets the loading status for authentication actions.</p><h5 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="context-4" tabindex="-1">context <a class="header-anchor" href="#context-4" aria-label="Permalink to &quot;context&quot;">​</a></h6><p><code>Context</code></p><p>The Vuex action context.</p><h6 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h6><p><code>boolean</code></p><p>The loading status value.</p><h5 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h3 id="getters" tabindex="-1">getters <a class="header-anchor" href="#getters" aria-label="Permalink to &quot;getters&quot;">​</a></h3><blockquote><p><strong>getters</strong>: <code>object</code> = <code>authGetters</code></p></blockquote><p>Getters for accessing authentication state data.</p><h4 id="getters-isauthenticated" tabindex="-1">getters.isAuthenticated() <a class="header-anchor" href="#getters-isauthenticated" aria-label="Permalink to &quot;getters.isAuthenticated()&quot;">​</a></h4><blockquote><p><strong>isAuthenticated</strong>(<code>state</code>): <code>boolean</code></p></blockquote><p>Returns the user&#39;s authentication status.</p><h5 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="state" tabindex="-1">state <a class="header-anchor" href="#state" aria-label="Permalink to &quot;state&quot;">​</a></h6><p><a href="./../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h5 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>boolean</code></p><p><code>true</code> if the user is authenticated, otherwise <code>false</code>.</p><h4 id="getters-isloadingauthstatus" tabindex="-1">getters.isLoadingAuthStatus() <a class="header-anchor" href="#getters-isloadingauthstatus" aria-label="Permalink to &quot;getters.isLoadingAuthStatus()&quot;">​</a></h4><blockquote><p><strong>isLoadingAuthStatus</strong>(<code>state</code>): <code>boolean</code></p></blockquote><p>Returns the loading status of the authentication process.</p><h5 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="state-1" tabindex="-1">state <a class="header-anchor" href="#state-1" aria-label="Permalink to &quot;state&quot;">​</a></h6><p><a href="./../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h5 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>boolean</code></p><p><code>true</code> if authentication status is loading, otherwise <code>false</code>.</p><h3 id="mutations" tabindex="-1">mutations <a class="header-anchor" href="#mutations" aria-label="Permalink to &quot;mutations&quot;">​</a></h3><blockquote><p><strong>mutations</strong>: <code>object</code> = <code>authMutations</code></p></blockquote><p>Mutations for updating the authentication state.</p><h4 id="mutations-changeloadingauthstatus" tabindex="-1">mutations.changeLoadingAuthStatus() <a class="header-anchor" href="#mutations-changeloadingauthstatus" aria-label="Permalink to &quot;mutations.changeLoadingAuthStatus()&quot;">​</a></h4><blockquote><p><strong>changeLoadingAuthStatus</strong>(<code>state</code>, <code>value</code>): <code>void</code></p></blockquote><p>Sets the loading status for authentication.</p><h5 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="state-2" tabindex="-1">state <a class="header-anchor" href="#state-2" aria-label="Permalink to &quot;state&quot;">​</a></h6><p><a href="./../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h6 id="value-1" tabindex="-1">value <a class="header-anchor" href="#value-1" aria-label="Permalink to &quot;value&quot;">​</a></h6><p><code>boolean</code></p><p>The loading status.</p><h5 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="mutations-changeuserauthenticationstatus" tabindex="-1">mutations.changeUserAuthenticationStatus() <a class="header-anchor" href="#mutations-changeuserauthenticationstatus" aria-label="Permalink to &quot;mutations.changeUserAuthenticationStatus()&quot;">​</a></h4><blockquote><p><strong>changeUserAuthenticationStatus</strong>(<code>state</code>, <code>value</code>): <code>void</code></p></blockquote><p>Sets the user&#39;s authentication status.</p><h5 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><h6 id="state-3" tabindex="-1">state <a class="header-anchor" href="#state-3" aria-label="Permalink to &quot;state&quot;">​</a></h6><p><a href="./../interfaces/AuthState"><code>AuthState</code></a></p><p>The Vuex state object.</p><h6 id="value-2" tabindex="-1">value <a class="header-anchor" href="#value-2" aria-label="Permalink to &quot;value&quot;">​</a></h6><p><code>boolean</code></p><p>The authentication status.</p><h5 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h3 id="namespaced" tabindex="-1">namespaced <a class="header-anchor" href="#namespaced" aria-label="Permalink to &quot;namespaced&quot;">​</a></h3><blockquote><p><strong>namespaced</strong>: <code>boolean</code> = <code>true</code></p></blockquote><h3 id="state-4" tabindex="-1">state() <a class="header-anchor" href="#state-4" aria-label="Permalink to &quot;state()&quot;">​</a></h3><blockquote><p><strong>state</strong>(): <a href="./../interfaces/AuthState"><code>AuthState</code></a></p></blockquote><p><strong><code>Function</code></strong></p><p>Returns the initial state for the auth module.</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../interfaces/AuthState"><code>AuthState</code></a></p><p>The initial authentication state.</p>',133)]))}const b=a(s,[["render",n]]);export{p as __pageData,b as default};
